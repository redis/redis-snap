name: redis
adopt-info: redis
summary: Redis is used as a database, cache and message broker. # 79 char long summary
description: |
  Redis is open source software, Starting with Redis 8.0, Redis follows a tri-licensing model with the choice of the Redis Source Available License v2 - RSALv2, Server Side Public License v1 - SSPLv1, or the GNU Affero General Public License v3 - AGPLv3. Prior versions of Redis (<=7.2.4) are licensed under 3-Clause BSD, and Redis 7.4.x-7.8.x are licensed under the dual RSALv2 or SSPLv1 license. |
  Redis is an in-memory data structure store, used as a database, cache and message broker. |
  It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. |
  Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster. |
  |
  Check out https://redis.io/ for more information.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
base: core22

apps:
  server:
    command: >-
      usr/bin/redis-server
      $SNAP_COMMON/etc/redis/redis.conf
      --loadmodule $SNAP/usr/lib/redis/modules/redisbloom.so
      --loadmodule $SNAP/usr/lib/redis/modules/rejson.so
      --loadmodule $SNAP/usr/lib/redis/modules/redistimeseries.so
      --loadmodule $SNAP/usr/lib/redis/modules/redisearch.so
    daemon: simple
    restart-condition: always
    environment:
      LANG: C.UTF-8
    plugs:
      - network
      - network-bind
      - network-observe
      - home
      - system-observe
  cli:
    command: usr/bin/redis-cli
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  benchmark:
    command: usr/bin/redis-benchmark
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  check-aof:
    command: usr/bin/redis-check-aof
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  check-rdb:
    command: usr/bin/redis-check-rdb
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  sentinel:
    command: usr/bin/redis-sentinel
    environment:
      LANG: C.UTF-8
    plugs:
      - network
      - network-bind
      - network-observe
      - home

parts:
  conf-dist:
    plugin: dump
    source: conf-dist
    organize:
      redis.conf: conf-dist/redis.conf
  
  cmake-install:
    plugin: nil
    override-build: |
      snap install cmake --channel=3.31/stable --classic
      snapcraftctl build
    build-packages:
      - snapd
  
  redis:
    after: [cmake-install]
    plugin: make
    source: redis
    build-environment:
      - BUILD_WITH_MODULES: "yes"
      - INSTALL_RUST_TOOLCHAIN: "yes"
      - DISABLE_WERRORS: "yes"
      - BUILD_TLS: "yes"
    override-build: |
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr/lib/redis/modules
      make -j4
      PREFIX=${SNAPCRAFT_PART_INSTALL}/usr make install
      VER=`sed -n 's/^.* REDIS_VERSION "\(.*\)"$/\1/g p' < src/version.h`
      if [ "$VER" = "999.999.999" ]; then
          GITSHA=`sed -n 's/^.* REDIS_GIT_SHA1 "\(.*\)"$/\1/g p' < src/release.h`
          VER="unstable-$GITSHA"
      fi
      snapcraftctl set-version $VER
    build-packages:
      - pkg-config
      - wget
      - gcc
      - g++
      - git
      - python3
      - python3-pip
      - python3-venv
      - python3-dev
      - unzip
      - rsync
      - clang
      - automake
      - autoconf
      - libtool
      - curl
      - libssl-dev
      - jq
